@name Vethian AI
@inputs [Energy,Refinery,LS,WCore,Core,Shield,Cloak,Gate,Rings]:wirelink
@outputs Active WarpFactor Tractor Lockdown Alert:string
@outputs GateFF GateRFF BridgeFF TransFF EngFF  ##Forcefields
@outputs BridgeDoor EngDoor GateDoor TransDoor HangarDoor HangarDoorLeft HangarDoorRight Shutters  ##Doors
@persist WaterCW:wirelink WaterCE:entity AimE:entity AimEW:wirelink

#Made by Nova Astral
#Discord: Nova Astral#2079
#Steam: http://steamcommunity.com/profiles/76561198068127098

#This is the docs on command usage
#https://docs.google.com/document/d/1O2u7H4LFrC73PP-RpSY7yRGR4XEydbntwioRyLWV7Gk/

#Todo:
#Drive Core speed commands
#E:addCoreTarget("string")
#Give Vethian more personality in the prints

runOnChat(1)

O = owner()
OLS = owner():lastSaid():lower():explode(" ")
Shipname = "Shipname"
LS["Name",string] = Shipname

if(first() | dupefinished()){
    Active = 1
    WarpFactor = 10
    Shutters = 1
    
    GateCol = 1 #Set this to 0 if you don't want your event horizon to change colors on alert
    
    timer("aprint",1000) #Disable this if you don't want the AI to print to faction on start
}

if(clk("aprint")){
    botSay("AI","Vethian",vec(150,0,255),"Vethian AI active from: <" +owner():name()+ "> on ship: <" +Shipname+ ">")
}

#################
####Stargazer####
#################


if(chatClk(O)){
    if(OLS[1,string] == "/v"){
        if(OLS[2,string] == "power"){
            if(Energy["Active",number] == 0){
                Energy["Activate",number] = 1
                print("Energy Generation Online.")
            }
            else{
                Energy["Activate",number] = 0
                print("Energy Generation Offline. W-why would you turn the power off?")
            }
        }
            
        if(OLS[2,string] == "refine"){
            if(Refinery["Active",number] == 0){
                Refinery["Activate",number] = 1
                print("Refinery Online.")
            }
            else{
                Refinery["Activate",number] = 0
                print("Refinery Offline.")
            }
        }

        if(OLS[2,string] == "ls"){
            if(LS["Active",number] == 0){
                LS["Activate",number] = 1
                print("Life Support Online.")
            }
            else{
                LS["Activate",number] = 0
                print("Life Support Offline.")
            }
        }

        if(OLS[2,string] == "noclip"){
            if(OLS[3,string] == "on"){
                LS["Disable Noclip",number] = 0
                print("Anti-Noclip Disabled.")
            }
            if(OLS[3,string] == "off"){
                LS["Disable Noclip",number] = 1
                print("Anti-Noclip Enabled.")
            }
            if(OLS[3,string] == "foff"){
                LS["Disable Noclip",number] = 2
                print("Faction only noclip Enabled.")
            }
            if(OLS[3,string] == "aoff"){
                LS["Disable Noclip",number] = 3
                print("Alliance only noclip Enabled.")
            }
        }
    
        if(OLS[2,string] == "mute"){
            LS["Mute",number] = 1
            Energy["Mute",number] = 1
            Refinery["Mute",number] = 1
            print("Cores Muted.")
        }
        if(OLS[2,string] == "unmute"){
            LS["Mute",number] = 0
            Energy["Mute",number] = 0
            Refinery["Mute",number] = 0
            print("Cores Unmuted.")
        }

        if(OLS[2,string] == "water"){
            WaterCW = WCore["Collector",entity]:wirelink()
            WaterCE = WCore["Collector",entity]
            timer("collect",100)
        }

        if(OLS[2,string] == "wplace"){
            WCore["Spawn Collector",number] = 1
            timer("placeclct",100)
            timer("setclct",10)
        }
    }
}

if(clk("collect")){
    if(WaterCE:isValid()){
        if(WaterCW["Active",number] == 0){
            WaterCW["Activate",number] = 1
            print("Water Collector Online.")
        }
        else{
            WaterCW["Activate",number] = 0
            print("Water Collector Offline.")
        }
    }
}

if(clk("setclct")){
    WaterCW = WCore["Collector",entity]:wirelink()
    WaterCE = WCore["Collector",entity]
}

if(clk("placeclct")){
    WaterCE:propFreeze(1)
    findIncludeEntity(WCore:entity())
    
    if(findInBox(vec(15837,-9,15839),vec(-15836,-15836,32)) == 1){ #pegasus
        print("Water Collector placed on: Shakuras")
        WaterCE:setPos(vec(-6818,-7200,6730))
    }
    
    if(findInBox(vec(15839,15835,15834),vec(-15839,35,33)) == 1){ #milkyway
        print("Water Collector placed on: Earth")
        WaterCE:setPos(vec(-1260,7982,7942))
    }
    
    if(findInBox(vec(15831,-15835,0),vec(-15837,-2269,-14015)) == 1){ #desert
        print("Water Collector placed on: Desert")
        WaterCE:setPos(vec(11350,-9220,-9360))
    }
    
    if(findInBox(vec(-15837,-2269,-14015),vec(15837,15838,0)) == 1){ #hiigara
        print("Water Collector placed on: Hiigara")
        WaterCE:setPos(vec(5654,6201,-6194))
    }
}


####################
####Core Systems####
####################

if(chatClk(O)){ #Yes I know I don't need to do this every time, but it feels better to me
    if(OLS[1,string] == "/v"){
        if(OLS[2,string] == "plating"){
            if(Core["Plating Enabled",number] == 0){
                Core["Enable Plating",number] = 1
                print("Plating Generation Enabled.")
                }
                else{
                    Core["Enable Plating",number] = 0
                    print("Plating Generation Disabled.")
                }
            }
            if(OLS[2,string] == "emitters"){
                if(Core["Emitters Enabled",number] == 0){
                    Core["Enable Emitters",number] = 1
                    print("Pulsar Emitters Online.")
                }
                else{
                    Core["Enable Emitters",number] = 0
                    print("Pulsar Emitters Offline.")
                }
            }

            if(OLS[2,string] == "repair"){
                if(OLS[3,string] == "on"){
                    Core["Fire Repair Beam",number] = 1
                    print("Firing Repair Beam.")
                }
                if(OLS[3,string] == "off"){
                    Core["Fire Repair Beam",number] = 0
                    print("Repair Beam Disabled.")
                }
            }

            if(OLS[2,string] == "tr"){
                if(OLS[3,string] == "on"){
                    Tractor = 1
                    print("Tractor Beam Enabled.")
                }
                if(OLS[3,string] == "off"){
                    Tractor = 0
                    print("Tractor Beam Disabled.")
                }
            }
            
            if(OLS[2,string] == "sd"){
                Core["Self Destruct",number] = 1
                print("Self Destruct Activated.")
            }
            
            if(OLS[2,string] == "shield"){
                if(Shield["Active",number] == 0){
                    Shield["Activate",number] = 1
                    print("Shield Activated.")
                }
                else{
                    Shield["Activate",number] = 0
                    print("Shield Deactivated.")
                }
            }
            
            if(OLS[2,string] == "cloak"){
                if(Cloak["Active",number] == 0){
                Cloak["Activate",number] = 1
                print("Cloak Activated.")
            }
            else{
                Cloak["Activate",number] = 0
                print("Cloak Deactivated.")
            }
        }

        if(OLS[2,string] == "startup"){
            print("Activating ship systems. Turning on Plating generation, Life Support, and Power.")
            Core["Enable Plating",number] = 1
            LS["Activate",number] = 1
            Energy["Activate",number] = 1
        }
    }
}

##############  
####Alarms####
##############

if(chatClk(O)){
    if(OLS[1,string] == "/v"){
        
        if(OLS[2,string] == "green"){
            Core:entity():setCoreEnvironmentSound("st/shuttlecraft/computer_work2.mp3",1,100)
            Alert = "Green"
            print("Condition Green. Stand Down.")
            
            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(0,0,0)
            }
        }

        if(OLS[2,string] == "blue"){
            Core:entity():setCoreEnvironmentSound("st/misc/bluealert.wav",1,100)
            Alert = "Blue"
            print("Condition Blue. Prepare for Battle.")
            
            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(0,0,255)
            }
        }

        if(OLS[2,string] == "red"){
            Core:entity():setCoreEnvironmentSound("st/misc/voy_redalert_loop.wav",1,100)
            Alert = "Red"
            print("Condition Red. Battle Stations.")
            
            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(255,0,0)
            }
        }

        if(OLS[2,string] == "black"){
            Core:entity():setCoreEnvironmentSound("st/misc/dsc_black_alert_short.wav",1,100)
            Alert = "Black"
            print("Condition Black. Shipwide Experiment.")
            
            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(50,50,50)
            }
        }

        if(OLS[2,string] == "abandon"){
            Core:entity():setCoreEnvironmentSound("st/misc/abandon_ship.wav",1,100)
            Alert = "Abandon Ship"
            print("Abandon Ship.")

            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(200,0,0)
            }
        }

        if(OLS[2,string] == "ldon"){
            Core:entity():setCoreEnvironmentSound("st/misc/rom_redalert.wav",1,100)
            BridgeFF = 1
            GateFF = 1
            GateRFF = 1
            TransFF = 1
            EngFF = 1
            Lockdown = 1
            Rings["UnUsable",number] = 1
            Shield["Activate",number] = 1
            LS["Disable Noclip",number] = 1
            print("Ship Lockdown Activated")
        }

        if(OLS[2,string] == "ldoff"){
            Core:entity():setCoreEnvironmentSound("st/shuttlecraft/computer_work2.mp3",1,100)
            BridgeFF = 0
            GateFF = 0
            GateRFF = 0
            TransFF = 0
            EngFF = 0
            Lockdown = 0
            Rings["UnUsable",number] = 0
            LS["Disable Noclip",number] = 0
            print("Ship Lockdown Activated")
        }
    }
}

#########################
####Doors/Forcefields####
#########################
if(chatClk(O)){
    if(OLS[1,string] == "/v"){
        
        if(OLS[2,string] == "ob"){
            BridgeDoor = 1
            print("Bridge Door Open")
        }

        if(OLS[2,string] == "cb"){
            BridgeDoor = 0
            print("Bridge Door Closed")
        }

        if(OLS[2,string] == "obf"){
            BridgeFF = 0
            print("Bridge Forcefield Deactivated")
        }

        if(OLS[2,string] == "cbf"){
            BridgeFF = 1
            print("Bridge Forcefield Activated")
        }
        
        if(OLS[2,string] == "og"){
            GateDoor = 1
            print("Gateroom Door Open")
        }

        if(OLS[2,string] == "cg"){
            GateDoor = 0
            print("Gateroom Door Closed")
        }

        if(OLS[2,string] == "ogrf"){
            GateRFF = 0
            print("Gateroom Forcefield Deactivated")
        }

        if(OLS[2,string] == "cgrf"){
            GateRFF = 1
            print("Gateroom Forcefield Activated")
        }
        
        #This is meant for a forcefield that encompasses the area around the gate as a security thing
        if(OLS[2,string] == "ogf"){
            GateFF = 0
            print("Gate Forcefield Deactivated")
        }

        if(OLS[2,string] == "cgf"){
            GateFF = 1
            print("Gate Forcefield Activated")
        }
        
        if(OLS[2,string] == "ot"){
            TransDoor = 1
            print("Transporter Room Door Open")
        }

        if(OLS[2,string] == "ct"){
            TransDoor = 0
            print("Transporter Room Door Closed")
        }

        if(OLS[2,string] == "otf"){
            TransFF = 0
            print("Transporter Room Forcefield Deactivated")
        }

        if(OLS[2,string] == "ctf"){
            TransFF = 1
            print("Transporter Room Forcefield Activated")
        }
        
        if(OLS[2,string] == "oe"){
            EngDoor = 1
            print("Engineering Door Open")
        }

        if(OLS[2,string] == "ce"){
            EngDoor = 0
            print("Engineering Door Closed")
        }
    
        if(OLS[2,string] == "oef"){
            EngFF = 0
            print("Engineering Forcefield Deactivated")
        }

        if(OLS[2,string] == "cef"){
            EngFF = 1
            print("Engineering Forcefield Activated")
        }

        if(OLS[2,string] == "ohl"){
            HangarDoorLeft = 1
            print("Left Hangar Opened.")
        }

        if(OLS[2,string] == "chl"){
            HangarDoorLeft = 0
            print("Left Hangar Closed.")
        }
        
        if(OLS[2,string] == "ohr"){
            HangarDoorRight = 1
            print("Right Hangar Opened.")
        }

        if(OLS[2,string] == "chr"){
            HangarDoorRight = 0
        print("Right Hangar Closed.")
        }

        if(OLS[2,string] == "oh"){
            HangarDoor = 1
            print("Hangar Opened")
        }

        if(OLS[2,string] == "ch"){
            HangarDoor = 0
            print("Hangar Closed")
        }
        
        if(OLS[2,string] == "os"){
            Shutters = 1
            print("Shutters Open")
        }

        if(OLS[2,string] == "cs"){
            Shutters = 0
            print("Shutters Closed")
        }
    }
}

############
####Misc####
############

if(chatClk(O)){
    if(OLS[1,string] == "/v"){
        if(OLS[2,string] == "sugged"){
            botSayAlliance("AI","Vethian",vec(150,0,255),"sugged xd")
        }

#[ #ship/player location  THIS DOESNT WORK BECAUSE E2 HAS NO STARGAZER FUNCTIONS DAMNIT
    if(OLS[2,string] == "sloc"){
        Env = Core:getEnvironmentData()
        print("The ship is located at: " +Env)
    }
]#

        if(OLS[2,string] == "reset"){
            reset()
        }

        if(OLS[2,string] == "help"){
            print("Vethian Help can be found at:")
            print("https://docs.google.com/document/d/1O2u7H4LFrC73PP-RpSY7yRGR4XEydbntwioRyLWV7Gk")
        }
        
        if(OLS[2,string] == "taim"){
            AimE = owner():aimEntity()
            if(AimE:isValid()){
                AimEW = owner():aimEntity():wirelink()
                print("Selecting aimed entity as testfire weapon")
            }
            else{
                print("You're not aiming at anything.")
            }
        }
        
        if(OLS[2,string] == "tfire"){
            if(AimE:isValid()){
                print("Testfiring weapon")
                AimEW["Fire",number] = 1
                timer("unfire",2500)
            }
            else{ #This does not work ?
                print("You have not selected anything to fire.")
            }
        }   
    }
}


if(clk("unfire")){
    AimEW["Fire",number] = 0
}

##################
####Gate/Rings####
##################
if(chatClk(O)){
    if(OLS[1,string] == "/v"){
        
        if(OLS[2,string] == "closeg"){
            Gate:stargateClose()
            print("Closing Gate.")
        }
        if(OLS[2,string] == "dial"){
            if(OLS[4,string]:length() > 7 && Gate:stargateLocal() == 1){
                print("Cannot dial outside of local group.")
            }
            else{
                Gate["Dial Mode",number] = OLS[3,string]:toNumber()
                Gate["Dial String",string] = OLS[4,string]
                
                if(OLS[3,string]:length() > 1){
                    print("Dial Mode cannot be a string")
                    timer("dialreset",100)
                }
                else{
                    print("Dialing the gate to: "+OLS[4,string])
                    timer("gdial",100)
                }
            }
        }
        
        #[ This Quotas the AI because of how it works (and it works very wrong), will maybe fix later
        if(OLS[2,string] == "gsend"){
            for(I = 3,256){
                Gate:stargateTransmit(OLS[I,string])
                print("Message sent through gate:")
                print(OLS[I,string])
            }
        }
        ]#
    }
}


if(clk("gdial")){
    Gate["Start String Dial",number] = 1
    timer("dialreset",2000)
}

if(clk("dialreset")){
    Gate["Dial Mode",number] = 0
    Gate["Dial String",string] = ""
    Gate["Start String Dial",number] = 0
}

###Rings

if(chatClk(O)){
    if(OLS[1,string] == "/v"){
        
        if(OLS[2,string] == "rdial"){
            if(OLS[3,string]:length() == 0){
                if(Rings["Usable",number] == 0){
                    print("Rings Disabled, Cannot dial.")
                }
                else{
                    Rings["Dial Closest",number] = 1
                    print("Dialing closest rings.")
                    timer("ringreset",100)
                }
            }
        
            if(OLS[3,string]:length() >= 1){
                if(Rings["Usable",number] == 0){
                    print("Rings Disabled, Cannot dial.")
                }
                else{
                    Rings["Dial Address",string] = OLS[3,string]
                    print("Dialing Rings to: "+ OLS[3,string])
                    timer("ringreset",100)
                }
            
                if(OLS[2,string] == "roff"){
                    Rings["UnUsable",number] = 1
                    print("Rings Disabled")
                }
            
                if(OLS[2,string] == "ron"){
                    Rings["UnUsable",number] = 0
                    print("Rings Enabled")
                }
            }
        }
    }
}

if(clk("ringreset")){
    Rings["Dial Address",string] = ""
    Rings["Dial Closest",number] = 0
}

##########
###Warp###
##########

if(chatClk(O)){
    if(OLS[1,string] == "/v"){
        if(OLS[2,string] == "wspeed"){
            if(OLS[3,string]:toNumber() <= 0){
                print("Invalid number specified. Current Warp Factor is: "+WarpFactor)
            }
            elseif(OLS[3,string]:toNumber() >= 11){
                print("Warp Factor cannot go above 9.975. Setting Warp Factor to max.")
                WarpFactor = 10
            }
            else{
                print("Warp Factor changed to: "+OLS[3,string]:toNumber())
                WarpFactor = OLS[3,string]:toNumber()
            }
        }
    }    
}
