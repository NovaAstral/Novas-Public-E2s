@name Replicator
@inputs PadE:entity Rep:entity
@outputs Ent:entity Text:string EntPos:vector Font:string
@persist PadTarget:entity PadBeam PadTargetLoc:vector

#Made by Nova Astral
#Discord: Nova Astral#2079
#Steam: http://steamcommunity.com/profiles/76561198068127098

#There is a tutorial on how to add new things at the bottom of the code

O = owner()
OLS = owner():lastSaid():lower():explode(" ")
runOnChat(1)

Pad = PadE:wirelink()

SpawnPos = vec(-14930,9720,-350)
RepOffset = -30 #This is the default replicator offset, change if you're using a different replicator slot

if(first() | duped()){
    print("The Replicator is online. Type '/rep help' for help.")
    propSpawnUndo(0) #this means all spawned props will delete themselves when you reset or..
    #.. remove the e2 so you don't need to go looking for them
    EntPos = Ent:pos()
    
    Font = "federation"
}

if(clk("padfind")){
    if(PadE:type() == "transporter_pad"){
        Pad["Target1",entity] = PadTarget
        Pad["Beam to vector",number] = PadBeam
        Pad["TargetLocation",vector] = PadTargetLoc
    }
    elseif(PadE:type() == "asgard_transporter"){
        Pad["Target",entity] = PadTarget
        Pad["Send",number] = PadBeam
        Pad["Destination",vector] = PadTargetLoc
}}

if(clk("Rep1")){
    Rep:soundPlay(1,1000,"st/shuttlecraft/computer_work.mp3")
    PadTarget = Ent
    timer("energise",100)
    stoptimer("rep1")
    #print("rep1")
    EntPos = Ent:pos()
    timer("padfind",10)
    timer("soundstop",1000)
}

if(clk("soundstop")){
    soundStop(1)
    soundStop(2)
}

if(clk("energise")){
    PadBeam = 1
        timer("Rep2",30)
        #print("energise")
    EntPos = Ent:pos()
    timer("padfind",10)
}
 
if(clk("Rep2")){
    PadBeam = 0
    PadTargetLoc = vec(0,0,0)
    stopAllTimers()
    #print("rep2")
    EntPos = Ent:pos()
    timer("padfind",10)
}
  
if(chatClk(O)){
    if(OLS[1,string] == "/rep"){
        
if(OLS[2,string]:length() < 1){
    print("You can't replicate nothing!")
}
        
if(OLS[2,string] == "help"){
    print("Use '/rep <thing>' to replicate something.")
    print("Replication List:")
    print("Ember, Alice, Glimmy, Burger, Egg, Balloon, Hotdog, Bomb, Tea, Pot, Can, Boot, Melon, Coffee, Antimatter, Ext, Shuttle, Noodles, Sandwich, Sbeptos, Tray, Spacemix, Nuggets, Medicine, Manual, Bucket, Paint")
}

#[ This function will only work if the targetlocation isn't reset
if(OLS[2,string] == "energise"){
    if(isJammed(Ent:pos())){
        print("Replicated Object jammed. Cannot Beam into replicator slot.")
    }
    else{
        print("Energising Replicator")
        timer("Rep1",10)
}}
]#

if(OLS[2,string] == "model"){
    if(OLS[3,string]:length() < 1){
        print("You must provide a model path for replication.")
    }
    else{
    Ent = propSpawn(OLS[3,string],SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,8)
    print("Replicating Custom Model: " +OLS[3,string])
    Text = "Replicating Custom Model: "+OLS[3,string]
    timer("Rep1",10)
}}

if(OLS[2,string] == "ember"){ #This is a reference to my girlfriend
    print("Error: Cannot replicate 'Ember'") 
    Text = "Error: Cannot replicate 'Ember'"
    Rep:soundPlay(2,1500,"st/shuttlecraft/computer_deny.wav")
    timer("soundstop",1500)
}

if(OLS[2,string] == "alice"){ #This is a reference to my girlfriend
    print("Error: Cannot replicate 'Alice'")
    Text = "Error: Cannot replicate 'Alice'"
    Rep:soundPlay(2,1500,"st/shuttlecraft/computer_deny.wav")
    timer("soundstop",1500)
}

if(OLS[2,string] == "glimmy"){ #This is a reference to my girlfriend
    print("Error: Cannot replicate 'Glimmy'")
    Text = "Error: Cannot replicate 'Glimmy'"
    Rep:soundPlay(2,1500,"st/shuttlecraft/computer_deny.wav")
    timer("soundstop",1500)
}

if(OLS[2,string] == "burger"){
    Ent = propSpawn("models/food/burger.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,-50) #burger has bad model, offset manually
    print("Replicating: Cheeseburger")
    Text = "Replicating: Cheeseburger"
    timer("Rep1",10)
}

if(OLS[2,string] == "egg"){
    Ent = propSpawn("models/props_phx/misc/egg.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Egg")
    Text = "Replicating: Egg"
    timer("Rep1",10)
}

if(OLS[2,string] == "balloon"){
    Ent = propSpawn("models/balloons/balloon_classicheart.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Balloon")
    Text = "Replicating: Balloon"
    timer("Rep1",10)
}


if(OLS[2,string] == "hotdog"){
    Ent = propSpawn("models/food/hotdog.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,-50) #hotdog has bad model, offset manually
    print("Replicating: Hotdog")
    Text = "Replicating: Hotdog"
    timer("Rep1",10)
}


if(OLS[2,string] == "bomb"){
    Ent = propSpawn("models/dynamite/dynamite.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Bomb")
    Text = "Replicating: Bomb"
    timer("Rep1",10)
}

if(OLS[2,string] == "tea"){
    Ent = propSpawn("models/props_interiors/pot01a.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Tea. Earl Grey. Hot.")
    Text = "Replicating: Tea. Earl Grey. Hot."
    timer("Rep1",10)
}

if(OLS[2,string] == "pot"){
    Ent = propSpawn("models/props_interiors/pot02a.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Pot (Drugs not included)")
    Text = "Replicating: Pot (Drugs not included)"
    timer("Rep1",10)
}

if(OLS[2,string] == "can"){
    Ent = propSpawn("models/props_junk/PopCan01a.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Can")
    Text = "Replicating: Can"
    timer("Rep1",10)
}

if(OLS[2,string] == "boot"){
    Ent = propSpawn("models/props_junk/Shoe001a.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Left Boot")
    Text = "Replicating: Left Boot"
    timer("Rep1",10)
}

if(OLS[2,string] == "melon"){
    Ent = propSpawn("models/props_junk/watermelon01.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Watermelon")
    Text = "Replicating: Watermelon"
    timer("Rep1",10)
}

if(OLS[2,string] == "coffee"){
    Ent = propSpawn("models/lt_c/sci_fi/coffee_mug.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Coffee. Black.")
    Text = "Replicating: Coffee. Black."
    timer("Rep1",10)
}

if(OLS[2,string] == "antimatter"){
    Ent = propSpawn("models/lt_c/sci_fi/am_container.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Antimatter Container")
    Text = "Replicating: Antimatter Container"
    timer("Rep1",10)
}

if(OLS[2,string] == "ext"){
    Ent = propSpawn("models/lt_c/sci_fi/extinguisher.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Fire Extinguisher")
    Text = "Replicating: Fire Extinguisher"
    timer("Rep1",10)
}

if(OLS[2,string] == "shuttle"){
    Ent = propSpawn("models/lt_c/sci_fi/shuttle/shuttle_skybox.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Shuttle")
    Text = "Replicating: Shuttle"
    timer("Rep1",10)
}

if(OLS[2,string] == "noodles"){
    Ent = propSpawn("models/slyfo/cup_noodle.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Noodles. (What is cup-a-soup?)")
    Text = "Replicating: Noodles. (What is cup-a-soup?)"
    timer("Rep1",10)
}

if(OLS[2,string] == "sandwich"){
    Ent = propSpawn("models/slyfo_2/acc_food_meatsandwichhalf.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Sandwich")
    Text = "Replicating: Sandwich"
    timer("Rep1",10)
}

if(OLS[2,string] == "sbeptos"){
    Ent = propSpawn("models/slyfo_2/acc_food_sbeptos.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Sbeptos")
    Text = "Replicating: Sbeptos"
    timer("Rep1",10)
}

if(OLS[2,string] == "tray"){
    Ent = propSpawn("models/slyfo_2/acc_food_foodtrayfull.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Food Tray")
    Text = "Replicating: Food Tray"
    timer("Rep1",10)
}

if(OLS[2,string] == "spacemix"){
    Ent = propSpawn("models/slyfo_2/acc_food_snckspacemix.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Spacemix")
    Text = "Replicating: Spacemix"
    timer("Rep1",10)
}

if(OLS[2,string] == "nuggets"){
    Ent = propSpawn("models/slyfo_2/acc_food_snckstridernugs.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Strider Nuggets")
    Text = "Replicating: Strider Nuggets"
    timer("Rep1",10)
}

if(OLS[2,string] == "medicine"){
    Ent = propSpawn("models/slyfo_2/acc_ndl4.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Medicine")
    Text = "Replicating: Cowona Vaccine"
    timer("Rep1",10)
}

if(OLS[2,string] == "manual"){
    Ent = propSpawn("models/spacebuild/sbepmanual.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: SBEP Manual")
    Text = "Replicating: SBEP Manual"
    timer("Rep1",10)
}

if(OLS[2,string] == "bucket"){
    Ent = propSpawn("models/props_junk/MetalBucket01a.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Bucket")
    Text = "Replicating: Bucket"
    timer("Rep1",10)
}

if(OLS[2,string] == "paint"){
    Ent = propSpawn("models/props_junk/metal_paintcan001a.mdl",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: Paint")
    Text = "Replicating: Paint"
    timer("Rep1",10)
}

}} #these need to be after everything else

#[
 #You'll need to add the new stuff to the replication list in /rep help yourself.


 #This one is a tutorial on how to set it up

if(OLS[2,string] == "<text to say in chat>"){
    Ent = propSpawn("<model>",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset) #spawn offset
    print("Replicating: <text put into your chat>")
    Text = "Replicating: <text for wire text scren>"
    timer("Rep1",10)
}

 #This one is for easy copypaste

if(OLS[2,string] == ""){
    Ent = propSpawn("",SpawnPos,0)
    PadTargetLoc = Rep:pos() + vec(0,0,RepOffset)
    print("Replicating: ")
    Text = "Replicating: "
    timer("Rep1",10)
}

