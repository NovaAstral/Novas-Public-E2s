@name Angle LerpTest
@inputs Active Ent:entity Target:vector
@persist TurnSpeed LerpTime [TarAng,EntAng]:angle [StartPitch,StartYaw,EndPitch,EndYaw] TarPos:vector

if(first()){
    TurnSpeed = 0
    EntAng = ang()
    
    LerpTime = 1 #How many seconds it takes to reach the target
}

if(~Active){
    if(Active == 1){
        timer("update",1)
    }
    else{
        TarPos = vec(0)
        
        TurnSpeed = 0
        
        stoptimer("update")
        stoptimer("lerp")
    }
}

if(clk("update")){
    timer("update",100)
    TarPos = Target
    
    if(changed(TarPos)){
        TurnSpeed = 0
        
        TarAng = (TarPos - Ent:pos()):toAngle()
        
        EndPitch = angnorm(TarAng:pitch())
        EndYaw = angnorm(TarAng:yaw())
        
        StartPitch = Ent:angles():pitch()
        StartYaw = Ent:angles():yaw()
        
        timer("lerp",0)
    }
}

if(clk("lerp")){
    timer("lerp",50)
    
    TurnSpeed = clamp(TurnSpeed+0.1/LerpTime,0,1)
    
    EntAng = EntAng:setPitch(lerp(StartPitch,EndPitch,TurnSpeed))
    EntAng = EntAng:setYaw(lerp(StartYaw,EndYaw,TurnSpeed))
    
    timer("setang",10)
}

if(clk("setang")){
    Ent:setAng(EntAng)
}
