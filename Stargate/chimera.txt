@name Chimera
@inputs Activate Tele Platform:entity CamCont:wirelink TargetPos:vector TargetEnt:entity
@persist TargetOrigin:vector CamOffset

#Made by Nova Astral
#Discord: Nova Astral#2079
#Steam: http://steamcommunity.com/profiles/76561198068127098

#This E2 only works for the owner because makaing it work for other people-
#-would require a chair
#I might make it possible later but I don't know

#I also completely stopped development on this because Quiru made her own version in SF

#Todo:
#Change the light to a wire light
#Change flashlight into wire light
#Thirdperson mode
#Chat functions to set scale

if(first() | duped()){
    timer("platformfind",10)
}

if(clk("platformfind")){
    timer("platformfind",1000)
    findIncludeEntity(owner())
    findInSphere(Platform:pos(),20)

    if(find():isValid() == 1 & Activate == 1){
        timer("targetpos",1)
        timer("activate",5)
    }
    elseif(find():isValid() == 0 & Activate == 1){
        timer("deactivate",1)
    }
}

if(changed(Activate) & Activate == 0 & !first()){
    timer("deactivate",1)
}

if(clk("activate")){
    stoptimer("platformfind")
    PlyCol = owner():getPlayerColor()

    holoCreate(1)
    holoAlpha(1,0)
    holoModel(1,owner():model())
    holoPlayerColor(1,PlyCol)
    holoAnim(1,2) #idle anim
    #holoScale(1,) #not sure how to do this
    holoVisible(1,owner(),0)
    
    holoCreate(2)
    holoAlpha(2,0)
    holoModel(2,owner():model())
    holoPlayerColor(2,PlyCol)
    holoAnim(2,2) #idle anim
    holoParent(2,holoEntity(1))
    #holoScale(2,) #not sure how to do this
    holoVisible(2,owner(),0)

    if(TargetPos == vec(0,0,0)){
        #lightCreate(1,owner():aimPos())
        holoPos(1,owner():aimPos())
        TargetOrigin = owner():aimPos()
    }
    else{
        if(TargetEnt:isPlayer()){
            holoPos(1,TargetPos)
            #lightCreate(1,TargetPos)
            TargetOrigin = TargetPos
        }
        else{
            holoPos(1,TargetPos)
            #lightCreate(1,TargetPos)
            TargetOrigin = TargetPos
        }
    }
    
    CamCont["Activated",number] = 1
    CamCont["Distance",number] = 0
    timer("update",10)

    #lightColor(1,vec(255,255,255))
    #lightBrightness(1,10)

    timer("fadein",400)
}

if(clk("fadein")){
    holoEntity(1):soundPlay(1,20,"tech/asgard_holo.wav")
    holoRenderFX(1,8) #solid fast fx
    holoRenderFX(2,8)

    timer("holofx",600)
}

if(clk("holofx")){
    #lightRemove(1)
    holoRenderFX(1,15) #distort fx
}

if(clk("deactivate")){
    soundStop(1)
    holoEntity(1):soundPlay(2,20,"tech/chair2_exit.wav")
    holoRenderFX(1,5) #fade slow fx
    holoRenderFX(2,5)
    
    #lightCreate(1,holoEntity(1):pos())
    #lightColor(1,vec(255,255,255))
    #lightBrightness(1,10)
    timer("fadeout",2000)
    
    CamCont["Activated",number] = 0
    stoptimer("update")
}


if(clk("fadeout")){
    holoDelete(1)
    holoDelete(2)

    #lightRemove(1)
    
    timer("platformfind",10)
}

if(changed(Tele) & Tele == 1){
    TargetOrigin = CamCont["HitPos",vector]
}

if(clk("update")){
    timer("update",1)

    CamCont["Position",vector] = holoEntity(1):pos() + vec(0,0,CamOffset)
    holoAng(1,owner():angles())
    holoPos(1,TargetOrigin+(owner():pos()-Platform:pos()))
}

if(changed(holoEntity(1):isUnderWater())){
    if(holoEntity(1):isUnderWater() == 1){
        holoAnim(1,8) #water idle anim
        holoAnim(2,8)
    }
    else{
        holoAnim(1,2)
        holoAnim(2,2)
    }
}

if(changed(owner():keyDuck())){
    if(owner():keyDuck() == 1){
        holoAnim(1,7) #crouch anim
        holoAnim(2,7)
        CamOffset = 35
    }
    else{
        holoAnim(1,2)
        holoAnim(2,2)
        CamOffset = 65
    }
}

if(changed(owner():keyForward())){
    if(owner():keyForward() == 1 & owner():keyWalk()){
        holoAnim(1,10) #walk anim
        holoAnim(2,10)
    }
    else{
        holoAnim(1,2)
        holoAnim(2,2)
    }
}

if(changed(owner():keyReload())){
    if(owner():keyReload() == 1){
        holoAnim(1,9) #sit anim
        holoAnim(2,9)
        CamOffset = 30
    }
    else{
        holoAnim(1,2)
        holoAnim(2,2)
        CamOffset = 65
    }
}

#[
#This doesn't work because Wire Extra's decided not to catch the error that happens from-
#-trying to do something to a light that doesn't exist

if(changed(owner():keyUse())){ #flashlight
    if(owner():keyUse() == 1){
        lightCreate(2,CamCont["HitPos",vector])
        lightBrightness(2,10)
        timer("lightupdate",10)
    }
    else{
        stoptimer("lightupdate")
        lightRemove(2)
        
    }
}

if(clk("lightupdate")){
    timer("lightupdate",10)
    lightPos(2,CamCont["HitPos",vector])
}
