@name Gate Functions
@inputs [Gate,ShipCore,AsgardTP]:wirelink TButton
@outputs [Address,Name,Owner,Message]:string GateTE:entity
@persist [Dest,OwnerCol,GateCol]:vector InboundAlarmS:string

#include "Novas-Public-E2s/library/nova_lib"

interval(500)

#Made by Nova Astral
#Discord: Nova Astral#2079
#Steam: http://steamcommunity.com/profiles/76561198068127098

GateE = Gate:entity()
Gateg = stargate(GateE)

InboundAlarm = 1 #Change this to 0 if you dont want an alarm to play
InboundAlarmS = "alarm/sga_offworld-alarm.wav" #Alarm sound

AutoIris = 0 #Enables the AutoIris feature that opens the iris of the linked gate if..
#..you're near the gate dialing it.
#Might make a chat toggle for this if someone wants it


if(changed(Gate["Inbound",number]) & Gate["Inbound",number] == 1 ){
    printColor(ColPink," [Stargate] ",ColOng,"Incoming Wormhole")
    
    if(InboundAlarm == 1){
        ShipCore:entity():setCoreEnvironmentSound(InboundAlarmS,0.2,100)
    }
        
}

if(changed(Gate["Open",number]) & Gate["Open",number] == 1 & Gate["Inbound",number] == 1){
    timer("update",10)
    timer("waitin",100)
    timer("autoiris",100)
}

if(clk("waitin")){
    printColor(ColPink," [Stargate] ",ColOng,"Gate Active from: < ",GateCol,Name,ColOng," > with address < ",GateCol,Address,ColOng," > owned by: <",OwnerCol,Owner,ColOng," >")
}

if(changed(Gate["Open",number]) & Gate["Open",number] == 1 & Gate["Inbound",number] == 0){
    timer("update",10)
    timer("waitout",100)
}

if(clk("waitout")){
    printColor(ColPink," [Stargate] ",ColOng,"Outgoing wormhole to: < ",GateCol,Name,ColOng," > with address < ",GateCol,Address,ColOng," > owned by: < ",OwnerCol,Owner,ColOng," >")
}

if(changed(Gate["Active",number]) & Gate["Active",number] == 0){
    printColor(ColPink," [Stargate] ",ColOng,"Gate Offline")
    stoptimer("autoiris")
    Address = ""
    Name = ""
    Owner = ""
    ShipCore:entity():stopCoreEnvironmentSound()
}

if(clk("update")){
    Address = Gate["Dialing Address",string]
    Name = Gateg:target():name()
    Owner = Gateg:target():entity():owner():name()
    OwnerCol = teamColor(Gateg:target():entity():owner():team())
    GateTE = Gateg:target():entity()
    Dest = GateTE:pos()+GateTE:forward()*100
    
    if(GateTE:type() == "stargate_sg1" | GateTE:type() == "stargate_movie" | GateTE:type() == "stargate_infinity"){
        GateCol = vec(255,150,0)
    }
    
    if(GateTE:type() == "stargate_orlin"){
        GateCol = vec(250,0,50)
    }
    
    if(GateTE:type() == "stargate_tollan" | GateTE:type() == "stargate_atlantis"){
        GateCol = vec(0,225,255)
    }
    
    if(GateTE:type() == "stargate_universe"){
        GateCol = vec(150,150,150)
    }
    
    timer("world",5)
    stoptimer("update")
}


if(clk("world")){
    if(Owner == ""){
    Owner = "world"
}}

if(changed(TButton) & TButton == 1){
    if(isJammed(GateTE:pos()+GateTE:forward()*100)){
    printColor(ColPink," [Stargate] ",ColOng,"Destination Jammed. Transport Aborted.")
    owner():soundPlay(1,2000,"st/shuttlecraft/computer_deny.wav")
}
    if((isJammed(owner():pos()))){
        printColor(ColPink," [Stargate] ",ColOng,"Origin Jammed. Transport Aborted.")
        owner():soundPlay(2,2000,"st/shuttlecraft/computer_deny.wav")
}
    else{
        AsgardTP:stargateAsgardTeleport(owner():pos(),Dest,0)
    }
}


if(changed(Gate["Received",string]) & Gate["Received",string]:length() > 0){
    printColor(ColPink," [Stargate] ",ColOng,"Message received through gate: "+Gate["Received",string])
    Message = Gate["Received",string]
}


if(AutoIris == 1){
    if(clk("autoiris")){
        timer("autoiris",200)
        findIncludeEntity(owner())
        findInSphere(GateTE:pos(),200)
        if(find():isValid() == 1){
            if(Gate:stargateIrisActive() == 1){
                Gate:stargateIrisToggle()
                printColor(ColPink," [Stargate] ",ColOng,"Owner near dialing gate. Opening iris.")
                stoptimer("autoiris")
            }
            elseif(Gate:stargateIrisActive() == 0){
                printColor(ColPink," [Stargate] ",ColOng,"Owner near dialing gate. Iris already open.")
                stoptimer("autoiris")
            }
        }
    }
}
