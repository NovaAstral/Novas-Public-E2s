@name Vethian AI 1.3

@inputs [Energy,Refinery,LS,WCore,Core,Shield,Cloak,Gate,Rings,DriveCore]:wirelink

@outputs Active WarpFactor Tractor Lockdown Alert:string SDTimeLeft SDActive DistressCall DistressLocation:string Jam
@outputs GateFF GateRFF BridgeFF TransFF EngFF  ##Forcefields
@outputs BridgeDoor EngDoor GateDoor TransDoor HangarDoor HangarDoorLeft HangarDoorRight Shutters  ##Doors
@outputs Fire WepStrength WepRate WepType  ##Weapon Control

@persist WaterCW:wirelink WaterCE:entity AimE:entity AimEW:wirelink Shipname:string DistressLocation:string
@persist GateCol SDTimeLeft DCoreSpeed DCoreTurnSpeed AutoDistress WPlaced Jam
@persist SH CP HP Prefix:string

#Made by Nova Astral
#Discord: Nova Astral#2079
#Steam: http://steamcommunity.com/profiles/76561198068127098
#Github: https://github.com/NovaAstral/Novas-Public-E2s/blob/main/Mainframes/vethian.txt


#This is the docs on command usage
#https://docs.google.com/document/d/1O2u7H4LFrC73PP-RpSY7yRGR4XEydbntwioRyLWV7Gk/


#If you want to make a suggestion/bug report
#either use the TSA channel for Vethian, or the github issues page


#Todo:
#Documentation on all functions of this mainframe and not just commands   
#E:addCoreTarget("string")
#Give Vethian more personality in the prints
#Merge Iris Computer
#Merge Gate Functions
#Merge Transporter Code 14
#Make and Merge Transporter control
#Make and Merge Targetting
#Make and Merge Warp
#Make screens
#Weapons control
#Warnings for if you try to use a command but the thing isn't linked
#Weapon Type Control
#Change Distress find to normal find and incorporate that into both new distress and player/ship find

#[

V1.3 Changes:

- Fixed turning lockdown off not disabling the core sound
- Added '/v o'neill' ;)
- Added an SDActive output for when self destruct is active
- Added a sound to self destruct
- Removed autoupdate because it was annoying me
- Added the ability for the ai to say things to faction and alliance (/v fsay and /v asay) Don't abuse this or i'll remove it.
- Added Jammer controls with '/v jam'
- Changed the faction/alliance noclip commands from '/v noclip foff/aoff' to '/v noclip fac/ally'
- Made the '/v water' command print a warning if you dont have a water core linked, or you dont have a collector placed
]#

#include "Novas-Public-E2s/library/nova_lib"

runOnChat(1)

O = owner()
OLS = owner():lastSaid():lower():explode(" ")

if(first() | dupefinished()){
    Active = 1 #This is just an active output to link things to
    WarpFactor = 10 #This is the starting warp factor
    Shutters = 1 #This opens the shutters when the AI is spawned
    
    GateCol = 1 #Set this to 0 if you don't want your event horizon to change colors on alert
    
    timer("aprint",1000) #Disable this if you don't want the AI to print to faction on start
    
    Shipname = "Shipname" #Change this to the name of your ship
    LS["Name",string] = Shipname

    #AutoDistress = 1 #Disable this if you don't want your ship to send a distress call at 30% hull
    #This isn't implemented yet
    
    Prefix = "/v" #If you don't use a / or ! in this, I will personally find you, and stab you.

    WepStrength = 10 #I would set these lower if you dont have alot of resources
    WepRate = 10
}

if(clk("aprint")){
    botSay("AI"," [Vethian] ",ColPink,"Vethian AI active from: <" +owner():name()+ "> on ship: <" +Shipname+ ">")
}

#################
####Stargazer####
#################


if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "power"){
            if(Energy["Active",number] == 0){
                Energy["Activate",number] = 1
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Energy Generation Online.")
            }
            else{
                Energy["Activate",number] = 0
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Energy Generation Offline. W-why would you turn the power off?")
            }
        }
        
        if(OLS[2,string] == "refine"){
            if(Refinery["Active",number] == 0){
                Refinery["Activate",number] = 1
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Refinery Online.")
            }
            else{
                Refinery["Activate",number] = 0
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Refinery Offline.")
            }
        }

        if(OLS[2,string] == "ls"){
            if(LS["Active",number] == 0){
                LS["Activate",number] = 1
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Life Support Online.")
            }
            else{
                LS["Activate",number] = 0
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Life Support Offline.")
            }
        }

        if(OLS[2,string] == "noclip"){
            if(OLS[3,string] == "on"){
                LS["Disable Noclip",number] = 0
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Anti-Noclip Disabled.")
            }
            if(OLS[3,string] == "off"){
                LS["Disable Noclip",number] = 1
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Anti-Noclip Enabled.")
            }
            if(OLS[3,string] == "fac"){
                LS["Disable Noclip",number] = 2
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Faction only noclip Enabled.")
            }
            if(OLS[3,string] == "ally"){
                LS["Disable Noclip",number] = 3
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Alliance only noclip Enabled.")
            }
        }
    
        if(OLS[2,string] == "mute"){
            LS["Mute",number] = 1
            Energy["Mute",number] = 1
            Refinery["Mute",number] = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Cores Muted.")
        }
        if(OLS[2,string] == "unmute"){
            LS["Mute",number] = 0
            Energy["Mute",number] = 0
            Refinery["Mute",number] = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Cores Unmuted.")
        }

        if(OLS[2,string] == "water"){
            WaterCW = WCore["Collector",entity]:wirelink()
            WaterCE = WCore["Collector",entity]
            timer("collect",100)
        }

        if(OLS[2,string] == "wplace"){
            WCore["Spawn Collector",number] = 1
            timer("placeclct",100)
            timer("setclct",10)
        }
    }
}

if(clk("collect")){
    if(WaterCE:isValid()){
        if(WaterCW["Active",number] == 0){
            WaterCW["Activate",number] = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Water Collector Online.")
        }
        else{
            WaterCW["Activate",number] = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Water Collector Offline.")
        }
    }
    else{
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Water Core not linked or collector not placed. Cannot collect water.")
    }
}

if(clk("setclct")){
    WaterCW = WCore["Collector",entity]:wirelink()
    WaterCE = WCore["Collector",entity]
}

if(clk("placeclct")){
    WaterCE:propFreeze(1)
    findIncludeEntity(WCore:entity())
    
    if(findInBox(vec(15837,-9,15839),vec(-15836,-15836,32)) == 1){ #pegasus
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Water Collector placed on: Shakuras")
        WaterCE:setPos(vec(-6818,-7200,6730))
        WPlaced = 1
    }
    
    if(findInBox(vec(15839,15835,15834),vec(-15839,35,33)) == 1){ #milkyway
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Water Collector placed on: Earth")
        WaterCE:setPos(vec(-1260,7982,7942))
        WPlaced = 1
    }
    
    if(findInBox(vec(15831,-15835,0),vec(-15837,-2269,-14015)) == 1){ #desert
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Water Collector placed on: Desert")
        WaterCE:setPos(vec(11350,-9220,-9360))
        WPlaced = 1
    }
    
    if(findInBox(vec(-15837,-2269,-14015),vec(15837,15838,0)) == 1){ #hiigara
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Water Collector placed on: Hiigara")
        WaterCE:setPos(vec(5654,6201,-6194))
        WPlaced = 1
    }
    
    elseif(WPlaced == 0){ #This should only trigger if you're in build/member/admin
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Why are you trying to use a water collector here?")
    }
    
    WPlaced = 0
}


####################
####Core Systems####
####################

if(chatClk(O)){ #Yes I know I don't need to do this every time, but it feels better to me
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "plating"){
            if(Core["Plating Enabled",number] == 0){
                Core["Enable Plating",number] = 1
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Plating Generation Enabled.")
                }
                else{
                    Core["Enable Plating",number] = 0
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Plating Generation Disabled.")
                }
            }
            
            if(OLS[2,string] == "fire"){
                if(OLS[3,string] == "on"){
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Firing Weapons")
                    Fire = 1
                }
                if(OLS[3,string] == "off"){
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Weapons Offline")
                    Fire = 0
                }
            }
            
            if(OLS[2,string] == "emitters"){
                if(Core["Emitters Enabled",number] == 0){
                    Core["Enable Emitters",number] = 1
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Pulsar Emitters Online.")
                }
                else{
                    Core["Enable Emitters",number] = 0
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Pulsar Emitters Offline.")
                }
            }

            if(OLS[2,string] == "repair"){
                if(OLS[3,string] == "on"){
                    Core["Fire Repair Beam",number] = 1
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Firing Repair Beam.")
                }
                if(OLS[3,string] == "off"){
                    Core["Fire Repair Beam",number] = 0
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Repair Beam Disabled.")
                }
            }

            if(OLS[2,string] == "tr"){
                if(OLS[3,string] == "on"){
                    Tractor = 1
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Tractor Beam Enabled.")
                }
                if(OLS[3,string] == "off"){
                    Tractor = 0
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Tractor Beam Disabled.")
                }
            }
            
            if(OLS[2,string] == "shield"){
                if(Shield["Active",number] == 0){
                    Shield["Activate",number] = 1
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Shield Activated.")
                }
                else{
                    Shield["Activate",number] = 0
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Shield Deactivated.")
                }
            }
            
            if(OLS[2,string] == "cloak"){
                if(Cloak["Active",number] == 0){
                Cloak["Activate",number] = 1
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Cloak Activated.")
            }
            else{
                Cloak["Activate",number] = 0
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Cloak Deactivated.")
            }
        }

        if(OLS[2,string] == "startup"){
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Activating ship systems. Turning on Plating generation, Life Support, and Power.")
            Core["Enable Plating",number] = 1
            LS["Activate",number] = 1
            Energy["Activate",number] = 1
        }
    }
    
    if(OLS[2,string] == "sd"){
        if(OLS[3,string] == "stop"){
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Aborting Self Destruct.")
            Core:entity():stopCoreEnvironmentSound()
            stoptimer("sdtime")
            SDTimeLeft = 0
            SDActive = 0
        }
        
        if(OLS[3,string]:length() <= 0){
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"No time specified. Activating Destruction.")
            Core["Self Destruct",number] = 1
            SDActive = 1
        }
        
        elseif(OLS[3,string] != "stop"){
            if(OLS[3,string]:toNumber() == 0){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Invalid time.")
            }
            else{
                SDTimeLeft = OLS[3,string]:toNumber()
                SDActive = 1
                Core:entity():setCoreEnvironmentSound("alarm/sga_midway_selfdestruct.wav",1,100)
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Self Destruct activated for <"+ SDTimeLeft + "> seconds.")
                timer("sdtime",10)
            }
        }
    }
}

if(clk("sdtime")){
    timer("sdtime",1000)
    SDTimeLeft--
    
    if(SDTimeLeft == 0){
        Core["Self Destruct",number] = 1
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Ship Destruct")
    }
    
    if(SDTimeLeft == 10){
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Self Destruct in 10 seconds.")
    }
    
    if(SDTimeLeft == 30){
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Self Destruct in 30 seconds.")
}

    if(SDTimeLeft == 60){
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Self Destruct in 60 seconds.")
    }
}

##############  
####Alarms####
##############

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        
        if(OLS[2,string] == "green"){
            Core:entity():setCoreEnvironmentSound("st/shuttlecraft/computer_work2.mp3",0.4,100)
            Core:entity():stopCoreEnvironmentSound()
            Alert = "Green"
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Condition Green. Stand Down.")

            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(0,0,0)
            }
        }

        if(OLS[2,string] == "blue"){
            Core:entity():setCoreEnvironmentSound("st/misc/bluealert.wav",0.4,100)
            Alert = "Blue"
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Condition Blue. Prepare for Battle.")
            
            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(0,0,255)
            }
        }

        if(OLS[2,string] == "red"){
            Core:entity():setCoreEnvironmentSound("st/misc/voy_redalert_loop.wav",0.4,100)
            Alert = "Red"
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Condition Red. Battle Stations.")
            
            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(255,0,0)
            }
        }

        if(OLS[2,string] == "black"){
            Core:entity():setCoreEnvironmentSound("st/misc/dsc_black_alert_short.wav",0.4,100)
            Alert = "Black"
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Condition Black. Shipwide Experiment.")
            
            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(50,50,50)
            }
        }

        if(OLS[2,string] == "abandon"){
            Core:entity():setCoreEnvironmentSound("st/misc/abandon_ship.wav",0.4,100)
            Alert = "Abandon Ship"
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Abandon Ship.")

            if(GateCol == 1){
                Gate["Event Horizon Color",vector] = vec(200,0,0)
            }
        }

        if(OLS[2,string] == "ldon"){
            Core:entity():setCoreEnvironmentSound("st/misc/rom_redalert.wav",0.4,100)
            BridgeFF = 1
            GateFF = 1
            GateRFF = 1
            TransFF = 1
            EngFF = 1
            Lockdown = 1
            Rings["UnUsable",number] = 1
            Shield["Activate",number] = 1
            LS["Disable Noclip",number] = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Ship Lockdown Activated")
        }

        if(OLS[2,string] == "ldoff"){
            Core:entity():setCoreEnvironmentSound("st/shuttlecraft/computer_work2.mp3",0.4,100)
            Core:entity():stopCoreEnvironmentSound()
            BridgeFF = 0
            GateFF = 0
            GateRFF = 0
            TransFF = 0
            EngFF = 0
            Lockdown = 0
            Rings["UnUsable",number] = 0
            LS["Disable Noclip",number] = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Ship Lockdown Deactivated")
        }
    }
}

#########################
####Doors/Forcefields####
#########################
if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        
        if(OLS[2,string] == "ob"){
            BridgeDoor = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Bridge Door Open")
        }

        if(OLS[2,string] == "cb"){
            BridgeDoor = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Bridge Door Closed")
        }

        if(OLS[2,string] == "obf"){
            BridgeFF = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Bridge Forcefield Deactivated")
        }

        if(OLS[2,string] == "cbf"){
            BridgeFF = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Bridge Forcefield Activated")
        }
        
        if(OLS[2,string] == "og"){
            GateDoor = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Gateroom Door Open")
        }

        if(OLS[2,string] == "cg"){
            GateDoor = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Gateroom Door Closed")
        }

        if(OLS[2,string] == "ogrf"){
            GateRFF = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Gateroom Forcefield Deactivated")
        }

        if(OLS[2,string] == "cgrf"){
            GateRFF = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Gateroom Forcefield Activated")
        }
        
        #This is meant for a forcefield that encompasses the area around the gate as a security thing
        if(OLS[2,string] == "ogf"){
            GateFF = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Gate Forcefield Deactivated")
        }

        if(OLS[2,string] == "cgf"){
            GateFF = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Gate Forcefield Activated")
        }
        
        if(OLS[2,string] == "ot"){
            TransDoor = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Transporter Room Door Open")
        }

        if(OLS[2,string] == "ct"){
            TransDoor = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Transporter Room Door Closed")
        }

        if(OLS[2,string] == "otf"){
            TransFF = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Transporter Room Forcefield Deactivated")
        }

        if(OLS[2,string] == "ctf"){
            TransFF = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Transporter Room Forcefield Activated")
        }
        
        if(OLS[2,string] == "oe"){
            EngDoor = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Engineering Door Open")
        }

        if(OLS[2,string] == "ce"){
            EngDoor = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Engineering Door Closed")
        }
    
        if(OLS[2,string] == "oef"){
            EngFF = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Engineering Forcefield Deactivated")
        }

        if(OLS[2,string] == "cef"){
            EngFF = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Engineering Forcefield Activated")
        }

        if(OLS[2,string] == "ohl"){
            HangarDoorLeft = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Left Hangar Opened.")
        }

        if(OLS[2,string] == "chl"){
            HangarDoorLeft = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Left Hangar Closed.")
        }
        
        if(OLS[2,string] == "ohr"){
            HangarDoorRight = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Right Hangar Opened.")
        }

        if(OLS[2,string] == "chr"){
            HangarDoorRight = 0
        printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Right Hangar Closed.")
        }

        if(OLS[2,string] == "oh"){
            HangarDoor = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Hangar Opened")
        }

        if(OLS[2,string] == "ch"){
            HangarDoor = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Hangar Closed")
        }
        
        if(OLS[2,string] == "os"){
            Shutters = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Shutters Open")
        }

        if(OLS[2,string] == "cs"){
            Shutters = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Shutters Closed")
        }
    }
}

############
####Misc####
############

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "sugged"){
            botSayAlliance("AI","Vethian",ColPink,"sugged xd")
        }
        
        if(OLS[2,string] == "asay"){
            botSayAlliance("AI","Vethian",ColPink,owner():lastSaid():sub(8))
        }
        
        if(OLS[2,string] == "fsay"){
            botSay("AI","Vethian",ColPink,owner():lastSaid():sub(8))
        }
        
        if(OLS[2,string] == "o'neill"){
            timer("whacko",1) # :)
        }

#[ #ship/player location  THIS DOESNT WORK BECAUSE E2 HAS NO STARGAZER FUNCTIONS DAMNIT
    if(OLS[2,string] == "sloc"){
        Env = Core:getEnvironmentData()
        printColor(ColTeam,"[AI]",ColPink," [Vethian]",ColOng,"The ship is located at: " +Env)
    }
]#

        if(OLS[2,string] == "reset"){
            reset()
        }

        if(OLS[2,string] == "help"){
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Vethian Help can be found at:")
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"https://docs.google.com/document/d/1O2u7H4LFrC73PP-RpSY7yRGR4XEydbntwioRyLWV7Gk")
        }
        
        if(OLS[2,string] == "taim"){
            AimE = owner():aimEntity()
            if(AimE:isValid()){
                AimEW = owner():aimEntity():wirelink()
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Selecting aimed entity as testfire weapon")
            }
            else{
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"You're not aiming at anything.")
            }
        }
        
        if(OLS[2,string] == "tfire"){
            if(AimE:isValid()){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Testfiring weapon")
                AimEW["Fire",number] = 1
                timer("unfire",2500)
            }
            else{
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"You have not selected anything to fire.")
            }
        }   
    }
}

if(clk("unfire")){
    AimEW["Fire",number] = 0
}


##################
####Gate/Rings####
##################
if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        
        if(OLS[2,string] == "closeg"){
            Gate:stargateClose()
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Closing Gate.")
        }
        if(OLS[2,string] == "dial"){
            if(OLS[4,string]:length() > 7 && Gate:stargateLocal() == 1){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Cannot dial outside of local group.")
            }
            else{
                Gate["Dial Mode",number] = OLS[3,string]:toNumber()
                Gate["Dial String",string] = OLS[4,string]
                
                if(OLS[3,string]:length() > 1){
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Dial Mode cannot be a string")
                    timer("dialreset",100)
                }
                else{
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Dialing the gate to: "+OLS[4,string])
                    timer("gdial",100)
                }
            }
        }
        
        if(OLS[2,string] == "gsend"){
            if(Gate["Active",number] == 0){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Gate is offline, cannot send a message.")
            }
            else{
                Gate:stargateTransmit(owner():lastSaid():sub(9))
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Message sent through gate: "+owner():lastSaid():sub(9))
            }
        }
    }
}


if(clk("gdial")){
    Gate["Start String Dial",number] = 1
    timer("dialreset",2000)
}

if(clk("dialreset")){
    Gate["Dial Mode",number] = 0
    Gate["Dial String",string] = ""
    Gate["Start String Dial",number] = 0
}

###Rings###

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        
        if(OLS[2,string] == "rdial"){
            if(OLS[3,string]:length() == 0){
                if(Rings["Usable",number] == 0){
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Rings Disabled, Cannot dial.")
                }
                else{
                    Rings["Dial Closest",number] = 1
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Dialing closest rings.")
                    timer("ringreset",100)
                }
            }
        
            if(OLS[3,string]:length() >= 1){
                if(Rings["Usable",number] == 0){
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Rings Disabled, Cannot dial.")
                }
                else{
                    Rings["Dial Address",string] = OLS[3,string]
                    printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Dialing Rings to: "+ OLS[3,string])
                    timer("ringreset",100)
                }
            }
        }
            
        if(OLS[2,string] == "roff"){
            Rings["UnUsable",number] = 1
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Rings Disabled")
        }
            
        if(OLS[2,string] == "ron"){
            Rings["UnUsable",number] = 0
            printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Rings Enabled")
        }
    }
}


if(clk("ringreset")){
    Rings["Dial Address",string] = ""
    Rings["Dial Closest",number] = 0
}

####################
###Jammer Control###
####################

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "jam"){
            if(Jam == 0){
                Jam = 1
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Jammer Online")
            }
            elseif(Jam == 1){
                Jam = 0
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Jammer Offline")
            }
        }
    }
}

####################
###Weapon Control###
####################

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "wstrength"){
            if(OLS[3,string]:toNumber() < 0){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Invalid number specified. Current Weapon Strength is: "+WepStrength)
            }
            elseif(OLS[3,string]:toNumber() >= 11){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Weapon Strength cannot go above 10. Setting Weapon Strength to max.")
                WepStrength = 10
            }
            else{
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Weapon Strength changed to: "+OLS[3,string]:toNumber())
                WepStrength = OLS[3,string]:toNumber()
            }
        }
        
        if(OLS[2,string] == "wrate"){
            if(OLS[3,string]:toNumber() < 0){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Invalid number specified. Current Weapon Rate is: "+WepStrength)
            }
            elseif(OLS[3,string]:toNumber() >= 11){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Weapon Rate cannot go above 10. Setting Weapon Rate to max.")
                WepRate = 10
            }
            else{
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Weapon Rate changed to: "+OLS[3,string]:toNumber())
                WepRate = OLS[3,string]:toNumber()
            }
        }
    }    
}

##########
###Warp###
##########

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "wspeed"){
            if(OLS[3,string]:toNumber() <= 0){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Invalid number specified. Current Warp Factor is: "+WarpFactor)
            }
            elseif(OLS[3,string]:toNumber() >= 11){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Warp Factor cannot go above 9.975. Setting Warp Factor to max.")
                WarpFactor = 10
            }
            else{
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Warp Factor changed to: "+OLS[3,string]:toNumber())
                WarpFactor = OLS[3,string]:toNumber()
            }
        }
    }    
}

################
###Drive Core###
################

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "cspeed"){
            if(OLS[3,string]:toNumber() < 0){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Invalid number specified. Current Drive Core Speed is: "+DCoreSpeed)
            }
            elseif(OLS[3,string]:toNumber() > 2){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Drive Core Speed cannot go above 2. Setting Speed to max.")
                DCoreSpeed = 2
                DriveCore["Speed Multiplier",number] = 2
            }
            else{
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Drive Core Speed changed to: "+OLS[3,string]:toNumber())
                DCoreSpeed = OLS[3,string]:toNumber()
                DriveCore["Speed Multiplier",number] = OLS[3,string]:toNumber()
            }
        }
    }    
}


if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "ctspeed"){
            if(OLS[3,string]:toNumber() < 0.5){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Invalid number specified. Current Drive core Turnspeed is: "+DCoreTurnSpeed)
            }
            elseif(OLS[3,string]:toNumber() > 2){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Drive Core Turnspeed cannot go above 2. Setting Turnspeed to max.")
                DCoreTurnSpeed = 2
                DriveCore["Turn Rate Multiplier",number] = 2
            }
            else{
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Drive Core Turnspeed changed to: "+OLS[3,string]:toNumber())
                DCoreTurnSpeed = OLS[3,string]:toNumber()
                DriveCore["Turn Rate Multiplier",number] = OLS[3,string]:toNumber()
            }
        }
    }    
}
################
###Calculator###
################

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "calc"){
            if(OLS[3,string]:toNumber() == 0 | OLS[5,string]:toNumber() == 0){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"NaN or 0 Used as Input, Cannot Calculate.")
            }
            elseif(OLS[4,string] == "+"){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Calc: ", vec(0,255,115), OLS[3,string]:toNumber() + OLS[5,string]:toNumber())
            }
            
            elseif(OLS[4,string] == "-"){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Calc: ", vec(0,255,115), OLS[3,string]:toNumber() - OLS[5,string]:toNumber())
            }
            
            elseif(OLS[4,string] == "*" | OLS[4,string] == "x"){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Calc: ", vec(0,255,115), OLS[3,string]:toNumber() * OLS[5,string]:toNumber())
            }
            
            elseif(OLS[4,string] == "/"){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Calc: ", vec(0,255,115), OLS[3,string]:toNumber() / OLS[5,string]:toNumber())
            }
            
            elseif(OLS[4,string] == "^"){
                printColor(ColTeam,"[AI]",ColPink," [Vethian] ",ColOng,"Calc: ", vec(0,255,115), OLS[3,string]:toNumber() ^ OLS[5,string]:toNumber())
            }
        }
    }
}


###################
###Distress Call###
###################

if(chatClk(O)){
    if(OLS[1,string] == Prefix){
        if(OLS[2,string] == "distress"){
            findIncludeEntity(Core:entity())
            
            if(findInBox(vec(15839,15835,15834),vec(-15839,35,33)) == 1){ #Milkyway
                DistressLocation = "Milkyway Space"
                Found = 1
            }
            
            if(findInSphere(vec(0,8032,8064),4280) == 1){ #Earth
                DistressLocation = "Earth"
                Found = 1
            }
            
            if(findInSphere(vec(-4480,13792,9920),1550) == 1){ #Moon
                DistressLocation = "Moon"
                Found = 1
            }
            
            
            if(findInBox(vec(15837,-9,15839),vec(-15836,-15836,32)) == 1){ #Pegasus
                DistressLocation = "Pegasus Space"
                Found = 1
            }
            
            if(findInSphere(vec(-7552,-7056,6832),5160) == 1){ #Shakur
                DistressLocation = "Shakuras"
                Found = 1
            }
            
            if(findInBox(vec(7068,-11246,10079),vec(9769,-4816,9032)) == 1){ #Station
                DistressLocation = "Station"
                Found = 1
            }
            
            
            if(findInBox(vec(15835,15840,0),vec(-15840,-15838,-14012)) == 1){ #Universe
                DistressLocation = "Universe Space"
                Found = 1
            }
            
            if(findInSphere(vec(7168,8704,-6064),5015) == 1){ #Hiigara
                DistressLocation = "Hiigara"
                Found = 1
            }
            
            if(findInSphere(vec(10624,-10668,-9384),4112) == 1){ #Desert
                DistressLocation = "Desert"
                Found = 1
            }
            
            if(findInSphere(vec(-9792,-79,-4688),3122) == 1){ #Lava
                DistressLocation = "Lava"
                Found = 1
            }
            
            elseif(Found == 0){
                print("You are in an unrecognized location. Cannot send Distress Call ")
            }
            
            if(Shield:entity():type() == "atlantis_shield_emitter"){
                ShieldCurEng = Shield["Current Energy",number]
                ShieldMaxEng = Shield["Max Energy",number]
            }
            elseif(Shield:entity():type() == "st_shield_emitter"){
                ShieldCurEng = Shield["Total Charge",number]
                ShieldMaxEng = Shield["Max Charge",number]
            }
            
            SH = round(ShieldCurEng / ShieldMaxEng * 100)
            CP = round(Core["Plating",number])
            HP = round(Core["Health",number] / Core["Max Health",number] * 100)
            
            botSayAlliance("AI"," [Vethian] ",ColPink,"Distress Call initated from: [" +Shipname+ "] Owned by: [" +owner():name()+ "]")
            timer("distresswait",2000)
            Found = 0
        }
    }
}

if(clk("distresswait")){ #Distress Info
    botSayAlliance("AI"," [Vethian] ",ColPink,"Distress Location: [" +DistressLocation+ "] Shields at: [" +SH+ "%] Plating at: [" +CP+ "%] Hull at: [" +HP+ "%]")
}
